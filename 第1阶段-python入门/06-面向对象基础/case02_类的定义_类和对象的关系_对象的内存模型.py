"""

    类可以看作一个模板。
    类：class
    对象： obejct/instance(实例)

    属性和方法：通过类定义数据类型的属性（数据）和方法（行为），也就是说"类将行为和状态打包在一起"

        属性（变量）：状态
        方法（函数）：行为

    对象是类的具体实体，一般称为"类的实例"，从一个类创建对象时，每个对象会共享这个类的行为（类中定义的方法），但是
    自己的属性值（不共享状态）。<方法代码时共享的，属性数据不共享。>

    定义类的语法：
        class 类名：
            类体
"""

'''
    类名必须符合“标识符”的规则；  一般规定，首字母大写，多个单词使用“驼峰原则”。
    类体中我们可以定义属性和方法
    属性用来描述数据，方法(即函数)用来描述这些数据相关的操作
'''

class Student:
    # 构造方法第一个参数必须为self
    def __init__(self, name, score):
        # 实例属性
        self.name = name
        self.score = score
    # 实例方法
    def say_score(self):
        print("{0}的分数是{1}".format(self.name, self.score))

    def say_score2(self):
        pass

# s1是实例对象，自动调用__init__()方法
s1 = Student('林大侠', 99)
# 林大侠的分数是99
s1.say_score()
# pass为空语句。就是表示什么都不做，只是作为一个占位符存
s1.say_score2()